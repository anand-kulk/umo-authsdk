// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target x86_64-apple-ios17.5-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-experimental-feature OpaqueTypeErasure -enable-bare-slash-regex -module-name UmoAuthSdk
import Flutter
import Foundation
import Swift
import SwiftUI
@_exported import UmoAuthSdk
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct AuthResponse {
  public var user: UmoAuthSdk.User
  public var accessToken: Swift.String
  public var refreshToken: Swift.String
}
public struct User {
  public let username: Swift.String
  public let email: Swift.String?
  public let phone: Swift.String?
}
public struct RefreshTokenResult {
}
@_Concurrency.MainActor @preconcurrency public struct WrapperView : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
  public typealias Body = @_opaqueReturnTypeOf("$s10UmoAuthSdk11WrapperViewV4bodyQrvp", 0) __
}
public class Auth {
  final public let flutterView: UmoAuthSdk.WrapperView
  public var loginCompletion: ((Swift.Result<UmoAuthSdk.AuthResponse, any Swift.Error>) -> Swift.Void)?
  public init()
  @objc deinit
}
extension UmoAuthSdk.WrapperView : Swift.Sendable {}
